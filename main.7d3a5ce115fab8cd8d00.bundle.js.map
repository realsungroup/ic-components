{"version":3,"file":"main.7d3a5ce115fab8cd8d00.bundle.js","sources":["webpack:///./components/Input/Input.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport omit from 'omit.js';\n\ninterface InputProps {\n  suffix: any; // 后缀图标\n}\n\nexport default class Input extends React.Component<InputProps & any, any> {\n  static propTypes = {\n    type: PropTypes.string,\n    disabled: PropTypes.bool,\n    suffix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  };\n\n  static defaultProps = {\n    type: 'text',\n    disabled: false,\n  };\n\n  state = {};\n\n  handleKeyDown = e => {\n    const { onPressEnter, onKeyDown } = this.props;\n    if (e.keyCode === 13 && onPressEnter) {\n      onPressEnter(e);\n    }\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n  };\n\n  renderInput = (props, hasSuffix) => {\n    const { className, ...restProps } = props;\n    const classes = classNames('ic-input', className, {\n      ['ic-input--has-suffix']: hasSuffix,\n    });\n    return <input className={classes} {...restProps} onKeyDown={this.handleKeyDown} />;\n  };\n\n  render() {\n    const { suffix, style, className } = this.props;\n    const otherProps = omit(this.props, ['onPressEnter', 'suffix', 'style']);\n\n    if (suffix) {\n      const classes = classNames('ic-input-wrap', className);\n      return (\n        <div className={classes}>\n          {this.renderInput(otherProps, true)}\n          {suffix}\n        </div>\n      );\n    }\n\n    return this.renderInput({ style, className, ...otherProps }, false);\n  }\n}\n"],"mappings":"AASA","sourceRoot":""}